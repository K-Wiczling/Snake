{"version":3,"file":"js/app.4f91ca98.js","mappings":"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","sources":["webpack://snake-vue/./src/App.vue?5982","webpack://snake-vue/./src/class/helpers/point.ts","webpack://snake-vue/./src/class/snake.ts","webpack://snake-vue/./src/class/helpers/color.ts","webpack://snake-vue/./src/class/canvasMenager.ts","webpack://snake-vue/./src/class/controlsMenager.ts","webpack://snake-vue/./src/class/food.ts","webpack://snake-vue/./src/class/score.ts","webpack://snake-vue/./src/class/gameMenager.ts","webpack://snake-vue/./src/components/scoreDispaly.vue?b8ca","webpack://snake-vue/./src/components/scoreDispaly.vue?89e4","webpack://snake-vue/./src/components/scoreDispaly.vue","webpack://snake-vue/./src/components/gameModal.vue?7451","webpack://snake-vue/./src/components/gameModal.vue?696c","webpack://snake-vue/./src/components/gameModal.vue","webpack://snake-vue/./src/App.vue?847a","webpack://snake-vue/./src/App.vue","webpack://snake-vue/./src/main.ts","webpack://snake-vue/webpack/bootstrap","webpack://snake-vue/webpack/runtime/chunk loaded","webpack://snake-vue/webpack/runtime/compat get default export","webpack://snake-vue/webpack/runtime/define property getters","webpack://snake-vue/webpack/runtime/global","webpack://snake-vue/webpack/runtime/hasOwnProperty shorthand","webpack://snake-vue/webpack/runtime/jsonp chunk loading","webpack://snake-vue/webpack/startup"],"sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  ref: \"canvasHolder\",\n  id: \"canvasHolder\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ScoreDispaly = _resolveComponent(\"ScoreDispaly\")!\n  const _component_gameModal = _resolveComponent(\"gameModal\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(_component_ScoreDispaly, {\n        score: _ctx.gm.score.score,\n        lvl: _ctx.gm.score.scorePerEat\n      }, null, 8, [\"score\", \"lvl\"])\n    ], 512),\n    (!_ctx.gameRun)\n      ? (_openBlock(), _createBlock(_component_gameModal, {\n          key: 0,\n          onStartGame: _cache[0] || (_cache[0] = ($event: any) => (_ctx.startGame())),\n          message: _ctx.gm.message\n        }, null, 8, [\"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","export default class Point {\r\n  x: number;\r\n  y: number;\r\n  constructor(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  // Check if this point is eaquel to one passed in the argument\r\n  isEquel(point: Point): boolean {\r\n    if (this.x === point.x && this.y === point.y) {\r\n      return true\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // Add argumented point to this one\r\n  addTo(addingPoint: Point) {\r\n    this.x += addingPoint.x;\r\n    this.y += addingPoint.y;\r\n  }\r\n\r\n  // Change values of the x & y based on the arguments\r\n  changePoint(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}","import Point from './helpers/point';\r\nimport { direction } from '../global/events';\r\nexport default class Snake {\r\n\r\n  body: Array<Point> = [];\r\n  currentDirection: direction = 'left';\r\n  gameSize: number = 40;\r\n  isSnakeAlive: boolean = false;\r\n  toGrow: boolean = false;\r\n\r\n  constructor(gameSize: number) {\r\n\r\n    this.gameSize = gameSize;\r\n    this.setup();\r\n  }\r\n\r\n  // Setup function\r\n  setup() {\r\n\r\n    // Clear snake\r\n    this.body = [];\r\n\r\n    // Initial body of the snake\r\n    this.body.push(new Point(20, 20)); //Head\r\n    this.body.push(new Point(21, 20));\r\n    this.body.push(new Point(22, 20));\r\n    this.body.push(new Point(23, 20));\r\n\r\n    this.currentDirection = 'left';\r\n  }\r\n  \r\n  // Increas size of the snake by one \r\n  eat() {\r\n    const newHead = new Point(this.body[0].x, this.body[0].y);\r\n    newHead.addTo(this.createDirection());\r\n    this.body.unshift(newHead);\r\n    this.toGrow = false;\r\n  }\r\n\r\n  // Set toGrow true for snake to grow on the next  update\r\n  hungry() {\r\n    this.toGrow = true;\r\n  }\r\n  // Change movement direction of the snake accordingly to the input\r\n  changeDirection(dir: direction) {\r\n    if (dir === 'left' && this.currentDirection === 'right')\r\n      return\r\n    if (dir === 'right' && this.currentDirection === 'left')\r\n      return\r\n    if (dir === 'top' && this.currentDirection === 'bottom')\r\n      return\r\n    if (dir === 'bottom' && this.currentDirection === 'top')\r\n      return\r\n\r\n    this.currentDirection = dir;\r\n  }\r\n\r\n  // Check if snake run in to the wall\r\n  checkForWalls() {\r\n    if (this.body[0].x < 0 || this.body[0].x > this.gameSize || this.body[0].y > this.gameSize || this.body[0].y < 0)\r\n      this.isSnakeAlive = false;\r\n  }\r\n\r\n  // Check if snake hit his tail\r\n  checkForTail() {\r\n\r\n    \r\n    for (let i: number = 1; i <= (this.body.length - 1); i++) {\r\n      if (this.body[0].isEquel(this.body[i])) \r\n        this.isSnakeAlive = false;\r\n    }\r\n\r\n  }\r\n  // Move snake in the currentDirection by one & chack for colisions\r\n  update() {\r\n    if (this.toGrow) {\r\n      this.eat()\r\n    } else {\r\n      this.move();\r\n    }\r\n    this.checkForTail();\r\n    this.checkForWalls();\r\n  }\r\n\r\n  // Move snake by one grid pice\r\n  move() {\r\n    let directionPoint = this.createDirection();\r\n\r\n    const snakeFace: Point = new Point(this.body[0].x, this.body[0].y)\r\n\r\n    snakeFace.addTo(directionPoint);\r\n\r\n\r\n    // Iterate through snake body form the back\r\n    // and change positon of each body part to the next one\r\n    for (let i: number = this.body.length - 1; i <= 1; i--) {\r\n      this.body[i] = Object.assign(this.body[i - 1]);\r\n    }\r\n    this.body.pop();\r\n    this.body.unshift(snakeFace);\r\n  }\r\n  // Create direction point base on currntDirectio\r\n  createDirection(): Point {\r\n    let directionPoint: Point = new Point(0, 0);\r\n\r\n    switch (this.currentDirection) {\r\n      case 'top':\r\n        directionPoint.changePoint(0, -1);\r\n        break;\r\n\r\n      case 'bottom':\r\n        directionPoint.changePoint(0, 1);\r\n        break;\r\n\r\n      case 'right':\r\n        directionPoint.changePoint(1, 0);\r\n        break;\r\n\r\n      case 'left':\r\n        directionPoint.changePoint(-1, 0);\r\n        break;\r\n    }\r\n    return directionPoint;\r\n  }\r\n}","class Color {\r\n\r\n    red: number;\r\n    green: number;\r\n    blue: number;\r\n\r\n    constructor(red: number, green: number, blue: number) {\r\n        \r\n        this.checkNumbers(red);\r\n        this.checkNumbers(green);\r\n        this.checkNumbers(blue);\r\n\r\n        this.red = red;\r\n        this.green = green;\r\n        this.blue = blue\r\n    }\r\n    \r\n    // Make sure that numbers are in the range of RGB \r\n    checkNumbers (color:number) {\r\n        if(color > 255) color = 255;\r\n        if(color < 0) color = 0;\r\n    }\r\n\r\n    // Get the color hash from the indyvidual RGB variables\r\n    getColorHash (): string {\r\n        let r: string = this.red.toString(16)\r\n        let g: string = this.green.toString(16)\r\n        let b: string = this.blue.toString(16)\r\n\r\n        if(this.red % 16 === 0){\r\n            r += r;\r\n        }\r\n        if(this.green % 16 === 0){\r\n            g += g\r\n        }\r\n        if(this.blue % 16 === 0){\r\n            b += b;\r\n        }\r\n\r\n        let hash: string = `#${r}${g}${b}`;\r\n        return hash;\r\n    }\r\n\r\n}\r\nexport default Color;","import Point from \"./helpers/point\";\r\nimport Color from \"./helpers/color\";\r\nclass CanvasMenager {\r\n  canvas: any;\r\n  canvasContext: any;\r\n  canvasHolder: HTMLElement = document.createElement('div');\r\n\r\n  resize: any;\r\n  width: number;\r\n  height: number;\r\n  gridSize: number = 15;\r\n\r\n  gameSize: number = 40;\r\n\r\n  colorBackground: Color = new Color(0,0,0);\r\n  colorMain: Color = new Color(30,225,0);\r\n\r\n  constructor(canvas: HTMLElement, gameSize: number) {\r\n    this.resize = addEventListener(\"resize\", () => {\r\n      this.calculateCanvas(this.canvas);\r\n    });\r\n\r\n    this.gameSize = gameSize;\r\n    this.setupCanvas(canvas);\r\n    this.calculateCanvas();\r\n  }\r\n\r\n  // Draw all the nessesery points on the canvas\r\n  drawUpdate(snake: Array<Point>, food: Point): void {\r\n    this.clearCanvas();\r\n    this.useColorMain();\r\n    this.drawSquare(food)\r\n    for (const point of snake) {\r\n      this.drawSquare(point);\r\n    }\r\n  }\r\n  // Cleaar canvas, to draw next update on the clean one\r\n  clearCanvas() {\r\n    this.useColorBakcground();\r\n    this.canvasContext.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n\r\n  // Change drawing color to the background \r\n  useColorBakcground(){\r\n    this.canvasContext.fillStyle = this.colorBackground.getColorHash();\r\n    \r\n  }\r\n  // Change drawing color to the main\r\n  useColorMain() {\r\n    this.canvasContext.fillStyle = this.colorMain.getColorHash();\r\n    this.canvasContext.fillStyle = '#00ff00';\r\n    \r\n  }\r\n  // Draw rect on the given position,\r\n  // with width & height equal to the grid size\r\n  drawSquare(p: Point) {\r\n    const g = this.gridSize;\r\n    this.canvasContext.fillRect(p.x * g, p.y * g, g, g);\r\n\r\n  }\r\n  // Calculate canvas dimentions & grid size base on the viewport \r\n  calculateCanvas(canvas?: any) {\r\n    if (this.canvas === null || this.canvas === undefined) {\r\n      this.canvas = canvas;\r\n    }\r\n    // Get current canvasHolder dimentions\r\n    const width = this.canvasHolder.clientWidth;\r\n    const height = this.canvasHolder.clientHeight;\r\n\r\n    // Tmp variables widht & height\r\n    let w: number;\r\n    let h: number;\r\n\r\n    // Chack Ratio of the canvasHolder and set grid size accordingly\r\n    if ((width / height) < 1) {\r\n      this.gridSize = Math.floor(width / this.gameSize);\r\n    } else {\r\n      this.gridSize = Math.floor(height / this.gameSize);\r\n    }\r\n\r\n    let tmpSize = (this.gridSize * this.gameSize) - 1\r\n    this.canvas.height = tmpSize;\r\n    this.canvas.width = tmpSize;\r\n\r\n  }\r\n\r\n  // Initialize canvas holder with the div element on the page\r\n  // in which the canvas will be append in\r\n  setupCanvas(canvasHolder: HTMLElement) {\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvasContext = this.canvas.getContext(\"2d\");\r\n    this.canvasHolder = canvasHolder;\r\n    this.createCanvas();\r\n  }\r\n  setCanvasColors(main: Color, background: Color) {\r\n    this.colorMain = main;\r\n    this.colorBackground = background;\r\n  }\r\n\r\n  // Append the canvas in the canvasHolder\r\n  createCanvas() {\r\n    this.canvasHolder.appendChild(this.canvas);\r\n  }\r\n\r\n}\r\nexport default CanvasMenager;","import { direction } from '../global/events';\r\n\r\nclass ControlsMenager {\r\n\r\n  currentDirection: direction = \"left\";\r\n\r\n  keysPress: any;\r\n  touchStart: any;\r\n  touchEnd: any;\r\n\r\n  StartTouchPosX: any = null;\r\n  StartTouchPosY: any = null;\r\n\r\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  // Initialize \r\n  init() {\r\n    this.keysPress = addEventListener('keyup', (e) => {\r\n      this.checkKeys(e.code);\r\n    });\r\n    this.touchStart = addEventListener('touchstart', (e) => {\r\n      this.checkSwipeStart(e);\r\n    });\r\n    this.touchEnd = addEventListener('touchend', (e) => {\r\n      this.checkSwipeEnd(e);\r\n    });\r\n  }\r\n\r\n  leftEvent = new CustomEvent('direction', {\r\n    detail: {\r\n      dir: 'left'\r\n    }\r\n  });\r\n  rightEvent = new CustomEvent('direction', {\r\n    detail: {\r\n      dir: 'right'\r\n    }\r\n  });\r\n  topEvent = new CustomEvent('direction', {\r\n    detail: {\r\n      dir: 'top'\r\n    }\r\n  });\r\n  bottomEvent = new CustomEvent('direction', {\r\n    detail: {\r\n      dir: 'bottom'\r\n    }\r\n  });\r\n\r\n  // Dispatch events base one the calculated input from touchscreen or keys pressed\r\n  left() {\r\n    dispatchEvent(this.leftEvent);\r\n  }\r\n\r\n  right() {\r\n    dispatchEvent(this.rightEvent);\r\n\r\n  }\r\n\r\n  top() {\r\n    dispatchEvent(this.topEvent);\r\n  }\r\n\r\n  bottom() {\r\n    dispatchEvent(this.bottomEvent);\r\n  }\r\n\r\n  // Calculate swipeing\r\n  //Get the strat position of the touch and store it to later use\r\n  checkSwipeStart (e: any) {\r\n    this.StartTouchPosX = e.touches[0].clientX;\r\n    this.StartTouchPosY = e.touches[0].clientY;\r\n  }\r\n  //Get the end position of the touch\r\n  checkSwipeEnd (e: any) {\r\n    const x = e.changedTouches[0].clientX;\r\n    const y = e.changedTouches[0].clientY;\r\n    this.calcSwipeDirection(x - this.StartTouchPosX, y - this.StartTouchPosY);\r\n  }\r\n  //Calculate swipe direction\r\n  calcSwipeDirection (x:number, y: number) {\r\n    let nx = Math.abs(x);\r\n    let ny = Math.abs(y);\r\n\r\n    if (nx >= ny) {\r\n      if (x > 0) {\r\n        //Swipe right\r\n        this.right();\r\n      } else {\r\n        //Swipe left\r\n        this.left();\r\n      }\r\n    } else {\r\n      if (y > 0) {\r\n        //Swipe down\r\n        this.bottom();\r\n      } else {\r\n        //Swipe top\r\n        this.top();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // Check witch key has been pressed\r\n  checkKeys(key: string) {\r\n    switch (key) {\r\n      case 'ArrowUp': this.top();\r\n        break;\r\n      case 'ArrowDown': this.bottom();\r\n        break;\r\n      case 'ArrowRight': this.right();\r\n        break;\r\n      case 'ArroeLeft': this.left();\r\n        break;\r\n\r\n      default: this.left();\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\nexport default ControlsMenager;","import Point from \"./helpers/point\";\r\n\r\nexport default class Food {\r\n\r\n  position: Point = new Point(15, 20);\r\n  range: number;\r\n\r\n  constructor(range: number) {\r\n    this.init(range);\r\n  }\r\n\r\n  // Initialiyation\r\n  init(range: number) {\r\n    this.range = range;\r\n  }\r\n  \r\n  // Generating new random position for the food\r\n  generatePosition() {\r\n    let x = Math.floor(Math.random() * (this.range-1));\r\n    let y = Math.floor(Math.random() * (this.range-1));\r\n\r\n    this.position.changePoint(x, y);\r\n  }\r\n}","class Score {\n  score: number = 0;\n  levelScore: number = 0;\n  scorePerEat: number = 1;\n\n  // Add points to the score\n  addPoints() {\n    if(this.score === 0 ) {\n      this.score = 1;\n      this.levelScore = 1;\n      return;\n    }\n\n    this.score += this.scorePerEat;\n    this.levelScore += this.scorePerEat;\n\n    this.levelUp();\n  }\n\n  // Set values to the initial\n  reset() {\n    this.score = 0;\n    this.levelScore = 0;\n    this.scorePerEat = 1;\n  }\n\n  // Check if player get enough points to speed up\n  levelUp() {\n    if (this.levelScore >= this.getNextPointToLevelUp(this.scorePerEat +4) && this.scorePerEat < 10){\n      this.scorePerEat++;\n      this.levelScore = 0;\n    }\n  }\n\n  // Use Fibonacii sequence to define next points level to progress the game \n  getNextPointToLevelUp(n: number): any {\n\n    if(n === 0 || n === 1) {\n      return n;\n    }    \n    let sum = 0;\n    let fib = 0;\n    let fib2 = 1;\n    for(let i: number = 1; i < n; i++) {\n      sum = fib + fib2;\n      fib = fib2;\n      fib2 = sum;\n\n    }\n    return sum;\n  }\n}\nexport default Score;","import Snake from \"./snake\";\r\nimport CanvasMenager from \"./canvasMenager\";\r\nimport ControlsMenager from \"./controlsMenager\";\r\nimport Food from \"./food\";\r\nimport Score from \"./score\";\r\n\r\nimport { direction } from \"@/global/events\";\r\n\r\n// Control the whole game\r\nexport default class GameMenager {\r\n\r\n  snake: Snake;\r\n  food: Food;\r\n  canvas: CanvasMenager;\r\n  controls: ControlsMenager;\r\n\r\n  // Initialize score here so it can be accesed in the rendering of the component\r\n  score: Score = new Score();\r\n\r\n  // Simple Variables\r\n  updateing: any;\r\n  startRefreshTime: number = 250; // 250[ms]\r\n  speedMultiplayer: number = 20;\r\n  minRefreshTimer: number = 80; // 80 [ms] \r\n  controlsListener: any;\r\n  gameSize: number = 40;\r\n  message: string = 'Hallo :)';\r\n\r\n  // Initialize everything\r\n  init(canvasRef: any) {\r\n\r\n    this.canvas = new CanvasMenager(canvasRef, this.gameSize);\r\n    this.controls = new ControlsMenager();\r\n    this.snake = new Snake(this.gameSize)\r\n    this.food = new Food(this.gameSize);\r\n    this.score = new Score();\r\n\r\n    // Listens to the controls to chagne direction of the snake\r\n    this.controlsListener = addEventListener('direction', (e) => {\r\n      const ev = e as CustomEvent;\r\n      this.snake.changeDirection(ev.detail.dir);\r\n    });\r\n\r\n    this.setup();\r\n  }\r\n\r\n  // Reset or setup all systems\r\n  setup() {\r\n    clearInterval(this.updateing);\r\n    this.snake.setup();\r\n    this.food.generatePosition();\r\n    this.score.reset();\r\n  }\r\n\r\n  // Calculations done each frame\r\n  gameLoop() {\r\n    if (this.snake.isSnakeAlive) {\r\n      this.snake.update()\r\n      this.canvas.drawUpdate(this.snake.body, this.food.position);\r\n\r\n      if (this.snake.body[0].isEquel(this.food.position)) {\r\n        this.score.addPoints();\r\n        this.food.generatePosition();\r\n        this.snake.hungry();\r\n      }\r\n      this.updateing = setTimeout(() => { this.gameLoop() }, this.speedUpdate() );\r\n    } else {\r\n      this.endGame();\r\n    }\r\n  }\r\n\r\n  // Start playing the game\r\n  start() {\r\n    this.snake.isSnakeAlive = true;\r\n    this.setup();\r\n    this.gameLoop();\r\n    dispatchEvent(new CustomEvent('startGame'));\r\n\r\n    \r\n  }\r\n\r\n  // Call whene Snake will hit the wall or tail\r\n  endGame() {\r\n    clearTimeout(this.updateing);\r\n    this.message = `You die, Your score is: ${this.score.score}`;\r\n    dispatchEvent(new CustomEvent('endGame'));\r\n  }\r\n\r\n  // Change speed accordingly to the formula && use score\r\n  speedUpdate (): number {\r\n    if((this.startRefreshTime - this.score.scorePerEat*15 > this.minRefreshTimer)){\r\n      return this.startRefreshTime - this.score.scorePerEat*this.speedMultiplayer;\r\n    }\r\n    return this.minRefreshTimer;\r\n  }\r\n\r\n\r\n\r\n}","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { id: \"score-dispaly\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"span\", null, \"Score: \" + _toDisplayString(_ctx.score), 1)\n  ]))\n}","\r\nimport { defineComponent } from \"vue\";\r\n\r\n\r\nexport default defineComponent({\r\n    name: 'scoreDisplay',\r\n    components: {\r\n    },\r\n    props: {\r\n        score: Number,\r\n        lvl: Number\r\n    },\r\n    methods: {\r\n        \r\n    },\r\n})\r\n","import { render } from \"./scoreDispaly.vue?vue&type=template&id=0555142a&ts=true\"\nimport script from \"./scoreDispaly.vue?vue&type=script&lang=ts\"\nexport * from \"./scoreDispaly.vue?vue&type=script&lang=ts\"\n\nimport \"./scoreDispaly.vue?vue&type=style&index=0&id=0555142a&lang=css\"\n\nimport exportComponent from \"D:\\\\Karol\\\\snake\\\\snake\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { id: \"game-modal\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"p\", null, _toDisplayString(_ctx.message), 1),\n    _createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.startGame && _ctx.startGame(...args)))\n    }, \"Start Game\")\n  ]))\n}","\r\n\r\nimport { defineComponent } from \"vue\";\r\n\r\nexport default defineComponent({\r\n    name: 'gameModal',\r\n    props: {\r\n        message: String\r\n    },\r\n    methods: {\r\n        startGame() {\r\n            this.$emit('startGame');\r\n        }\r\n    },\r\n\r\n})\r\n","import { render } from \"./gameModal.vue?vue&type=template&id=614b1c0e&ts=true\"\nimport script from \"./gameModal.vue?vue&type=script&lang=ts\"\nexport * from \"./gameModal.vue?vue&type=script&lang=ts\"\n\nimport \"./gameModal.vue?vue&type=style&index=0&id=614b1c0e&lang=css\"\n\nimport exportComponent from \"D:\\\\Karol\\\\snake\\\\snake\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\n\nimport { defineComponent } from \"vue\";\nimport GameMenager from './class/gameMenager';\nimport ScoreDispaly from \"./components/scoreDispaly.vue\";\nimport gameModal from \"./components/gameModal.vue\";\n\nexport default defineComponent({\n  name: 'App',\n  components: {\n    ScoreDispaly,\n    gameModal\n  },\n  data() {\n    return {\n      gm: new GameMenager(),\n      gameRun: false\n    }\n  },\n  methods: {\n    startGame() {\n      this.gm.start();\n    }\n  },\n  mounted() {\n    this.gm.init(this.$refs.canvasHolder);\n    let gameEnd = addEventListener('endGame', () => {\n      this.gameRun = false;\n    });\n    let gameStart = addEventListener('startGame', () => {\n      this.gameRun = true;\n    });\n  }\n})\n","import { render } from \"./App.vue?vue&type=template&id=fa63da1a&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=fa63da1a&lang=css\"\n\nimport exportComponent from \"D:\\\\Karol\\\\snake\\\\snake\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksnake_vue\"] = self[\"webpackChunksnake_vue\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(5379); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_hoisted_1","ref","id","render","_ctx","_cache","$props","$setup","$data","$options","_component_ScoreDispaly","_resolveComponent","_component_gameModal","_openBlock","_createElementBlock","_Fragment","_createElementVNode","_createVNode","score","gm","lvl","scorePerEat","gameRun","_createCommentVNode","_createBlock","key","onStartGame","$event","startGame","message","Point","constructor","x","y","this","isEquel","point","addTo","addingPoint","changePoint","Snake","gameSize","setup","body","push","currentDirection","eat","newHead","createDirection","unshift","toGrow","hungry","changeDirection","dir","checkForWalls","isSnakeAlive","checkForTail","i","length","update","move","directionPoint","snakeFace","Object","assign","pop","Color","red","green","blue","checkNumbers","color","getColorHash","r","toString","g","b","hash","CanvasMenager","canvas","document","createElement","resize","addEventListener","calculateCanvas","setupCanvas","drawUpdate","snake","food","clearCanvas","useColorMain","drawSquare","useColorBakcground","canvasContext","fillRect","width","height","fillStyle","colorBackground","colorMain","p","gridSize","undefined","canvasHolder","clientWidth","clientHeight","Math","floor","tmpSize","getContext","createCanvas","setCanvasColors","main","background","appendChild","ControlsMenager","CustomEvent","detail","init","keysPress","e","checkKeys","code","touchStart","checkSwipeStart","touchEnd","checkSwipeEnd","left","dispatchEvent","leftEvent","right","rightEvent","top","topEvent","bottom","bottomEvent","StartTouchPosX","touches","clientX","StartTouchPosY","clientY","changedTouches","calcSwipeDirection","nx","abs","ny","Food","range","generatePosition","random","position","Score","addPoints","levelScore","levelUp","reset","getNextPointToLevelUp","n","sum","fib","fib2","GameMenager","canvasRef","controls","controlsListener","ev","clearInterval","updateing","gameLoop","setTimeout","speedUpdate","endGame","start","clearTimeout","startRefreshTime","minRefreshTimer","speedMultiplayer","_toDisplayString","defineComponent","name","components","props","Number","methods","__exports__","onClick","args","String","$emit","ScoreDispaly","gameModal","data","mounted","$refs","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}